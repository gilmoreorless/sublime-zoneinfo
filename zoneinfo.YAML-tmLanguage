# [PackageDev] target_format: plist, ext: tmLanguage
---
name: zoneinfo
scopeName: text.zoneinfo
fileTypes:
- africa
- antarctica
- asia
- australasia
- backward
- backzone
- etcetera
- europe
- factory
- northamerica
- pacificnew
- southamerica
- systemv
uuid: 6f25ec5b-a532-479a-841d-596ff7c820b3

patterns:
- comment: Line comments
  name: comment.line.number-sign.zoneinfo
  match: \#.*$

- comment: Zone definitions
  name: meta.zone.zoneinfo
  match: |
    (?x)
    ^(Zone)?          # "Zone"
    \s+([\w+\-\/]+)?  # Zone name
    \s+([\d:\-]+)     # UTC offset
    \s+([\w:\-]+)     # Rules
    \s+([\w%]+)       # Format
  captures:
    '1': {name: storage.type.zone.zoneinfo}
    '2': {name: entity.name.zone.zoneinfo}
    '3': {name: constant.numeric.time.zoneinfo}
    '4': {name: storage.type.rule.zoneinfo}
    '5': {name: variable.other.format.zoneinfo}

- comment: Rule defintions
  name: meta.rule.zoneinfo
  match: ^Rule\b

- comment: Link definitions
  name: meta.link.zoneinfo
  begin: ^(Link)\b
  beginCaptures:
    '1': {name: storage.type.link.zoneinfo}
  end: $
  patterns:
  - include: '#comment'
  - include: '#zonename'

- comment: Time values
  name: constant.numeric.time.zoneinfo
  patterns:
  - include: '#time'

repository:
  comment:
    name: comment.line.number-sign.zoneinfo
    match: \#.*$
  zonename:
    match: \b[\w+\-\/]+\b
    name: entity.name.zone.zoneinfo
  rulename:
    match: \b[A-Za-z_]+\b
    name: string.name.rule.zoneinfo
  time:
    match: \b-?\d+(:\d+)+\b
    name: constant.numeric.time.zoneinfo
